{"version":3,"sources":["logo.svg","screens/wordpressApi.jsx","screens/HugeUpload.jsx","App.js","reportWebVitals.js","index.js"],"names":["Component","ProductCount","HugeUpload","getFileContext","e","_file","target","files","splitStream","File","start","end","a","size","Bytes","slice","text","ByteText","i2","getIndex","setState","ResumeFrom","LinesArray","split","ReadRow2","console","log","progressInstance","ReadRow","rows","Product","Stream","count","c","length","includes","substring","JSON","parse","ex","state","Row","niceProduct","UpdateProduct","Pro","Title","manufacturer","name","manufacturerSKU","fetch","puid","productPriceInfo","price","productType","shortDescription","longDescription","aggregatedStock","aggregatedStatusText","attributeTypeName1","attributeTypeName2","attributeTypeName3","attributeTypeName4","attributeTypeName5","attributeValue1","attributeValue2","attributeValue3","attributeValue4","attributeValue5","method","headers","btoa","resp","json","respJson","stringify","ParseImages","hasOwnProperty","mediaContents","forEach","streamSlice","getProduct","Products","push","counter","B2","startIndex","proinvalid","product","ProJsn","uploadProduct","string","subString","index","join","type","onChange","this","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0adb4dcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport catinfo from './product'\r\n\r\nexport default class WordpressApi extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { Reactive: true }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        console.log('start')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <h1>hello World</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction callback(error, response, body) {\r\n    if (!error && response.statusCode == 200) {\r\n        console.log(body);\r\n    }\r\n}\r\n\r\nconst brandsCodes = [\r\n    1153, 1154, 1155, 1156,\r\n    1157, 158, 1159, 1160,\r\n    1161, 1162, 1163, 1164,\r\n\r\n    1165, 1166, 1167, 1168,\r\n    169, 1170, 1171, 1172,\r\n    1173, 1174, 1175, 1176,\r\n\r\n    1177, 1178, 1179, 1180,\r\n    1187, 1189, 1190, 1191,\r\n    1192 , 1193\r\n\r\n]\r\n\r\nconst brandNames = [\r\n    'Dell', 'Allied Telesis', 'Aruba', 'Avaya',\r\n    'Brocade', 'Brocadexify', 'Cisco', 'D-Link',\r\n    'DIGITUS', 'EnGenius', 'Extreme Networks', 'F-Secure',\r\n\r\n    'GrandStream', 'HP Enterprise', 'Huawei', 'Intellinet',\r\n    'Juniper', 'Lenovo', 'Linksys', 'MikroTik',\r\n    'Moxa', 'QNAP', 'Siera Wireless', 'StarTech.com',\r\n\r\n    'Synology', 'TP-LINK', 'UbiQuiti', 'ZyXEL',\r\n    'Sophos', 'SonicWALL', 'Stormshield', 'Fortinet',\r\n     'APC' , 'Poly'\r\n]\r\n\r\nvar c = 0","import React, { Component } from \"react\";\r\nimport { ProgressBar, Jumbotron, Button, Form } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport oboe from 'oboe';\r\n//var oboe = require('oboe');\r\n\r\nvar ProductCount = 0;\r\n\r\nexport default class HugeUpload extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            ResumeFrom: -1,\r\n            Products: [],\r\n            counter: 0,\r\n            progressInstance: 0\r\n        }\r\n    }\r\n\r\n    getFileContext = (e) => {\r\n        const _file = e.target.files[0];\r\n\r\n        //this.RowStream(_file, 0, 100000)\r\n        this.splitStream(_file, 0, 100000)\r\n\r\n    }\r\n\r\n\r\n    splitStream = async (File, start, end) => {\r\n        if (end <= File.size) {\r\n            var Bytes = File.slice(start, end);\r\n            //console.log(`Start:${start} __ End: ${end}`)\r\n\r\n            var ByteText = await Bytes.text();\r\n            var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n            //console.log(`Resume From :: ${start + i2 - 100}`)\r\n            this.setState({ ResumeFrom: start + i2 - 100 })\r\n            var LinesArray = ByteText.split('\\n')\r\n            this.ReadRow2(File, LinesArray)\r\n        } else {\r\n            console.log(\"Finished Processing File\")\r\n            this.setState({ progressInstance: 'Finished Processing File'})\r\n        }\r\n    }\r\n\r\n    // RowStream = async (File, start, end) => {\r\n    //     var Size = File.size;\r\n    //     //const Total = File.size % chunkSize == 0 ? File.size / chunkSize : Math.floor(File.size / chunkSize) + 1\r\n    //     //alert(Size)\r\n\r\n    //     console.log(`Array::${Lines[2].length}`)\r\n\r\n    //     var Bytes = File.slice(start, end);\r\n    //     var ByteText = await Bytes.text();\r\n    //     var LinesArray = ByteText.split('\\n')\r\n    //     //this.ReadRow(LinesArray)\r\n    //     // \r\n    // }\r\n\r\n    ReadRow = (File, rows) => {\r\n\r\n        var Product = '', Pause = -1, Stream = false, count = 0;\r\n        for (let c = 0; c <= rows.length - 1; c++) {\r\n            if (rows[c].includes('puid')) Stream = true\r\n            if (Stream) {\r\n                if (rows[c].includes('puid')) count += 1\r\n                if (count == 1) {\r\n                    let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n                    Product += Row;\r\n                    //  console.log(Row)\r\n                }\r\n                if (count == 2) {\r\n                    Stream = false;\r\n                    Product = Product.substring(0, Product.length - 3)\r\n                    try {\r\n                        console.log(JSON.parse(Product))\r\n                    } catch (ex) { console.log(ex) }\r\n                    ProductCount += 1;\r\n                    console.log(`Products :: ${ProductCount}`)\r\n                    //   console.log(this.state.ResumeFrom)\r\n                    this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ReadRow2 = async (File, rows) => {\r\n\r\n        var Product = '', Pause = -1, Stream = false, count = 0;\r\n        for (let c = 0; c <= rows.length - 1; c++) {\r\n            if (rows[c].includes('puid')) Stream = true\r\n            if (Stream) {\r\n                if (rows[c].includes('puid')) count += 1\r\n                if (count == 1) {\r\n                    let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n                    Product += Row;\r\n                    //  console.log(Row)\r\n                }\r\n                if (count == 2) {\r\n                    Stream = false;\r\n                    Product = Product.substring(0, Product.length - 3)\r\n\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            var niceProduct = JSON.parse(Product)\r\n           // console.log(niceProduct)\r\n            const Resp = await this.UpdateProduct(niceProduct)\r\n            //console.log(Resp)\r\n        } catch (ex) { console.log(ex) }\r\n        ProductCount += 1;\r\n        console.log(`Products :: ${ProductCount}`)\r\n        this.setState({ progressInstance: ProductCount })\r\n\r\n        //   console.log(this.state.ResumeFrom)\r\n        this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n    }\r\n\r\n\r\n    // Recursion = (C,rows) => {\r\n\r\n    //   C++;\r\n    //   if (C <= rows.length) this.Recursion(C,rows)\r\n    // }\r\n\r\n\r\n\r\n    UpdateProduct = async (Pro) => {\r\n\r\n        var Title = Pro.manufacturer.name + \" \" + Pro.manufacturerSKU;\r\n       // var Images = this.ParseImages(Pro)\r\n       \r\n        const resp = await fetch(`https://firewallforce.se/wp-json/wc/v3/update64?name=${Title}&puid=${Pro.puid}&sku=${Pro.manufacturerSKU}&price=${Pro.productPriceInfo.price}&catname=${Pro.productType.name}&brand=${Pro.manufacturer.name}&shortdesc=${Pro.shortDescription}&longdesc=${Pro.longDescription}&stock=${Pro.aggregatedStock}&stockstatus=${Pro.aggregatedStatusText}&attrib1=${Pro.productType.attributeTypeName1}&attrib2=${Pro.productType.attributeTypeName2}&attrib3=${Pro.productType.attributeTypeName3}&attrib4=${Pro.productType.attributeTypeName4}&attrib5=${Pro.productType.attributeTypeName5}&attrib1v=${Pro.attributeValue1}&attrib2v=${Pro.attributeValue2}&attrib3v=${Pro.attributeValue3}&attrib4v=${Pro.attributeValue4}&attrib5v=${Pro.attributeValue5}`, {\r\n            method: 'GET',\r\n            // body:{info:Product},\r\n            headers: {\r\n                'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526')\r\n            }   \r\n         })\r\n\r\n       const respJson = await resp.json() \r\n       console.log(`resp :: ${JSON.stringify(respJson)}`) \r\n       return respJson\r\n            //.then(response => response.json())\r\n           // .then(data => console.log(data));\r\n    }\r\n    \r\n\r\n    ParseImages = (Pro) => {\r\n        if (Pro.hasOwnProperty('mediaContents')) {\r\n           Pro.mediaContents.forEach(()=>{\r\n\r\n           })\r\n        }\r\n    }\r\n\r\n    streamSlice = async (File, start, end) => {\r\n\r\n\r\n\r\n\r\n        var Bytes = File.slice(start, end);\r\n        var ByteText = await Bytes.text();\r\n        var Product = this.getProduct(ByteText, start)\r\n\r\n        this.state.Products.push(Product)\r\n        this.setState({ Products: this.state.Products, counter: this.state.counter + 1 })\r\n\r\n        var B2 = File.slice(this.state.ResumeFrom, 3);\r\n        var text2 = await B2.text()\r\n        // console.log(`codeGuru : ${File.length - 1}`)\r\n\r\n    }\r\n\r\n    getProduct = (ByteText, startIndex) => {\r\n        var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n        this.setState({ ResumeFrom: i2 })\r\n        var proinvalid = ByteText.substring(startIndex - 9, i2)\r\n        console.log(proinvalid)\r\n        var product = proinvalid.substring(0, proinvalid.length - 9)\r\n        var ProJsn = JSON.parse(product)\r\n        console.log(ProJsn)\r\n        return ProJsn\r\n    }\r\n\r\n    getIndex(string, subString, index) {\r\n        return string.split(subString, index).join(subString).length;\r\n    }\r\n\r\n    uploadProduct = async (Bytes) => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={(e) => { this.getFileContext(e) }} />\r\n                <h5> {this.state.progressInstance} </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport WordpressApi from './screens/wordpressApi'\nimport HugeUpload from './screens/HugeUpload'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HugeUpload />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}