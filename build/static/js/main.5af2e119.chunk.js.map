{"version":3,"sources":["logo.svg","screens/wordpressApi.jsx","screens/HugeUpload.jsx","App.js","reportWebVitals.js","index.js"],"names":["Component","ProductCount","ProArray","HugeUpload","getFileContext","e","_file","target","files","splitStream","File","start","end","a","size","Bytes","slice","text","ByteText","i2","getIndex","setState","ResumeFrom","LinesArray","split","ReadRow2","console","log","progressInstance","rows","Product","Stream","count","c","length","includes","Row","substring","niceProduct","JSON","parse","UpdateProduct","ex","Resumify","state","Pro","push","Fetch","setInterval","SequenceCount","App","fetch","method","body","stringify","info","headers","btoa","then","resp","json","respJson","catch","ParseImages","images","hasOwnProperty","mediaContents","forEach","object","value","modval","join","streamSlice","getProduct","Products","counter","B2","startIndex","proinvalid","product","ProJsn","nodechecker","Pause","string","subString","index","type","onChange","this","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5af2e119.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport catinfo from './product'\r\n\r\nexport default class WordpressApi extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { Reactive: true }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        console.log('start')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <h1>hello World</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction callback(error, response, body) {\r\n    if (!error && response.statusCode == 200) {\r\n        console.log(body);\r\n    }\r\n}\r\n\r\nconst brandsCodes = [\r\n    1153, 1154, 1155, 1156,\r\n    1157, 158, 1159, 1160,\r\n    1161, 1162, 1163, 1164,\r\n\r\n    1165, 1166, 1167, 1168,\r\n    169, 1170, 1171, 1172,\r\n    1173, 1174, 1175, 1176,\r\n\r\n    1177, 1178, 1179, 1180,\r\n    1187, 1189, 1190, 1191,\r\n    1192 , 1193\r\n\r\n]\r\n\r\nconst brandNames = [\r\n    'Dell', 'Allied Telesis', 'Aruba', 'Avaya',\r\n    'Brocade', 'Brocadexify', 'Cisco', 'D-Link',\r\n    'DIGITUS', 'EnGenius', 'Extreme Networks', 'F-Secure',\r\n\r\n    'GrandStream', 'HP Enterprise', 'Huawei', 'Intellinet',\r\n    'Juniper', 'Lenovo', 'Linksys', 'MikroTik',\r\n    'Moxa', 'QNAP', 'Siera Wireless', 'StarTech.com',\r\n\r\n    'Synology', 'TP-LINK', 'UbiQuiti', 'ZyXEL',\r\n    'Sophos', 'SonicWALL', 'Stormshield', 'Fortinet',\r\n     'APC' , 'Poly'\r\n]\r\n\r\nvar c = 0","import React, { Component } from \"react\";\r\nimport { ProgressBar, Jumbotron, Button, Form } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport oboe from 'oboe';\r\n//var oboe = require('oboe');\r\n\r\nvar ProductCount = 0, ProArray = [];\r\n\r\nexport default class HugeUpload extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            ResumeFrom: -1,\r\n            Products: [],\r\n            counter: 0,\r\n            progressInstance: 0,\r\n            Pause: false,\r\n            SequenceCount: false\r\n        }\r\n    }\r\n\r\n    getFileContext = (e) => {\r\n        const _file = e.target.files[0];\r\n\r\n        //this.RowStream(_file, 0, 100000)\r\n        this.splitStream(_file, 0, 100000)\r\n\r\n    }\r\n\r\n\r\n    splitStream = async (File, start, end) => {\r\n        if (end <= File.size) {\r\n            var Bytes = File.slice(start, end);\r\n            //console.log(`Start:${start} __ End: ${end}`)\r\n\r\n            var ByteText = await Bytes.text();\r\n            var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n            //console.log(`Resume From :: ${start + i2 - 100}`)\r\n            this.setState({ ResumeFrom: start + i2 - 100 })\r\n            var LinesArray = ByteText.split('\\n')\r\n            this.ReadRow2(File, LinesArray)\r\n        } else {\r\n            console.log(\"Finished Processing File\")\r\n            this.setState({ progressInstance: 'Finished Processing File' })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // ReadRow = (File, rows) => {\r\n\r\n    //     var Product = '', Pause = -1, Stream = false, count = 0;\r\n    //     for (let c = 0; c <= rows.length - 1; c++) {\r\n    //         if (rows[c].includes('puid')) Stream = true\r\n    //         if (Stream) {\r\n    //             if (rows[c].includes('puid')) count += 1\r\n    //             if (count == 1) {\r\n    //                 let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n    //                 Product += Row;\r\n    //                 //  console.log(Row)\r\n    //             }\r\n    //             if (count == 2) {\r\n    //                 Stream = false;\r\n    //                 Product = Product.substring(0, Product.length - 3)\r\n    //                 try {\r\n    //                     console.log(JSON.parse(Product))\r\n    //                 } catch (ex) { console.log(ex) }\r\n    //                 ProductCount += 1;\r\n    //                 console.log(`Products :: ${ProductCount}`)\r\n    //                 //   console.log(this.state.ResumeFrom)\r\n    //                 this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    ReadRow2 = async (File, rows) => {\r\n\r\n        var Product = '', Pause = -1, Stream = false, count = 0;\r\n        for (let c = 0; c <= rows.length - 1; c++) {\r\n            if (rows[c].includes('puid')) Stream = true\r\n            if (Stream) {\r\n                if (rows[c].includes('puid')) count += 1\r\n                if (count == 1) {\r\n                    let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n                    Product += Row;\r\n                    //  console.log(Row)\r\n                }\r\n                if (count == 2) {\r\n                    Stream = false;\r\n                    Product = Product.substring(0, Product.length - 3)\r\n\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            var niceProduct = JSON.parse(Product)\r\n            //console.log(niceProduct)\r\n            this.UpdateProduct(niceProduct, File)\r\n        } catch (ex) {\r\n            console.log(`Catch :: ${ex}`)\r\n            this.Resumify(File)\r\n        }\r\n        //   console.log(this.state.ResumeFrom)\r\n        // if (!this.state.Pause) this.Resumify(File)\r\n\r\n    }\r\n\r\n\r\n    Resumify = (File) => {\r\n        this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n    }\r\n\r\n\r\n\r\n    UpdateProduct = async (Pro, File) => {\r\n        ProArray.push(Pro)\r\n        if (ProArray.length == 5) {\r\n            console.log(\"5 products bundled\")\r\n            this.Fetch(ProArray)\r\n     \r\n            setInterval(() => {\r\n                if (this.state.SequenceCount == 5) {\r\n                    console.log(\"5 products uploaded\")\r\n                    ProArray = []\r\n                    this.setState({ SequenceCount: 0 })\r\n                    // clearInterval(procounter)\r\n                    this.Resumify(File)\r\n                }\r\n            }, 1000)\r\n        } else {\r\n            console.log('Resume: Products ')\r\n            this.Resumify(File)\r\n        }\r\n    }\r\n\r\n    Fetch = (Pro) => {\r\n\r\n        // var Title = \"\" , productType = '' , Brand = '';\r\n        \r\n        // if (Pro.hasOwnProperty('manufacturer') == true)  {\r\n        //     Title = Pro.manufacturer.name + \" \" + Pro.manufacturerSKU;\r\n        //     Brand = Pro.manufacturer.name;\r\n        // }\r\n        // if (Pro.hasOwnProperty('productType') == true)   productType = Pro.productType.name;\r\n        // if (Pro.hasOwnProperty('productPriceInfo') == true) Price = Pro.productPriceInfo.price\r\n\r\n        // var Images = this.ParseImages(Pro)\r\n        // var productWithManufacturer = Pro.manufacturerName + Pro.productName\r\n\r\n        console.log(`Status :: Sending:Request`)\r\n        var App = this, Price = 0.00;\r\n        \r\n        // fetch(`https://firewallforce.se/wp-json/wc/v3/postify?ean=${Pro.ean}&name=${Title}&puid=${Pro.puid}&sku=${Pro.manufacturerSKU}&price=${Price}&catname=${productType}&brand=${Brand}&shortdesc=${Pro.shortDescription}&longdesc=${Pro.longDescription}&stock=${Pro.aggregatedStock}&stockstatus=${Pro.aggregatedStatusText}&attrib1=${Pro.productType.attributeTypeName1}&attrib2=${Pro.productType.attributeTypeName2}&attrib3=${Pro.productType.attributeTypeName3}&attrib4=${Pro.productType.attributeTypeName4}&attrib5=${Pro.productType.attributeTypeName5}&attrib1v=${Pro.attributeValue1}&attrib2v=${Pro.attributeValue2}&attrib3v=${Pro.attributeValue3}&attrib4v=${Pro.attributeValue4}&attrib5v=${Pro.attributeValue5}&images=${Images}&warrantyText=${Pro.warrantyText}&productName=${Pro.productName}&productNameWithManufacturer=${productWithManufacturer}&productTypeGroup=${Pro.productType.productTypeGroup}&producttypeName=${Pro.productType.name}&productsubtype=${Pro.productSubType}&productsubtypeid=${Pro.productSubTypeId}&estimategrossweight=${Pro.estimateGrossWeight}&productType=${Pro.manufacturerName}&productModel=${Pro.productModel}&htmlspecs=${Pro.htmlSpecs}`, {\r\n     fetch(`https://firewallforce.se/wp-json/wc/v3/postify?`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({info:Pro}),\r\n            headers: {\r\n                'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526'),\r\n                'Content-Type' : 'application/json'\r\n            },\r\n        }).then((resp) => {\r\n            resp.json().then((respJson) => {\r\n                ProductCount += 1;\r\n                console.log(`resp :: ${JSON.stringify(respJson)}`)\r\n                console.log(`Products :: ${ProductCount}`)\r\n                App.setState({\r\n                    progressInstance: ProductCount,\r\n                    SequenceCount: this.state.SequenceCount += 5\r\n                })\r\n                return respJson\r\n            })\r\n        }).catch((e) => {\r\n            //console.log(e)\r\n            console.log('@safe!')\r\n            ProductCount += 1;\r\n            App.setState({\r\n                progressInstance: ProductCount,\r\n                SequenceCount: this.state.SequenceCount += 5\r\n            })\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    ParseImages = (Pro) => {\r\n        var images = []\r\n        if (Pro.hasOwnProperty('mediaContents')) {\r\n            Pro.mediaContents.forEach((object) => {\r\n                if (object.value.includes('img')) {\r\n                    let modval = object.value.split('/').join('*')\r\n                    modval = modval.split('&').join('^')\r\n                    images.push(modval)\r\n                }\r\n            })\r\n        }\r\n        return images\r\n    }\r\n\r\n    streamSlice = async (File, start, end) => {\r\n\r\n\r\n\r\n\r\n        var Bytes = File.slice(start, end);\r\n        var ByteText = await Bytes.text();\r\n        var Product = this.getProduct(ByteText, start)\r\n\r\n        this.state.Products.push(Product)\r\n        this.setState({ Products: this.state.Products, counter: this.state.counter + 1 })\r\n\r\n        var B2 = File.slice(this.state.ResumeFrom, 3);\r\n        var text2 = await B2.text()\r\n        // console.log(`codeGuru : ${File.length - 1}`)\r\n\r\n    }\r\n\r\n    getProduct = (ByteText, startIndex) => {\r\n        var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n        this.setState({ ResumeFrom: i2 })\r\n        var proinvalid = ByteText.substring(startIndex - 9, i2)\r\n        console.log(proinvalid)\r\n        var product = proinvalid.substring(0, proinvalid.length - 9)\r\n        var ProJsn = JSON.parse(product)\r\n        console.log(ProJsn)\r\n        return ProJsn\r\n    }\r\n\r\n    getIndex(string, subString, index) {\r\n        return string.split(subString, index).join(subString).length;\r\n    }\r\n\r\n    nodechecker = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={(e) => { this.getFileContext(e) }} />\r\n                <h5> {this.state.progressInstance} </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport WordpressApi from './screens/wordpressApi'\nimport HugeUpload from './screens/HugeUpload'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HugeUpload />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}