{"version":3,"sources":["logo.svg","screens/wordpressApi.jsx","screens/HugeUpload.jsx","App.js","reportWebVitals.js","index.js"],"names":["Component","ProductCount","require","ProArray","HugeUpload","componentDidMount","getFileContext","e","_file","target","files","splitStream","File","start","end","a","size","Bytes","slice","text","ByteText","i2","getIndex","setState","ResumeFrom","LinesArray","split","ReadRow2","console","log","progressInstance","rows","Product","Stream","count","c","length","includes","Row","substring","niceProduct","JSON","parse","UpdateProduct","ex","Resumify","state","Pro","push","Fetch","setInterval","SequenceCount","manufacturerSKU","ParseImages","App","fetch","method","body","stringify","info","headers","btoa","then","Resp","resp","respJson","reupdate","catch","hasOwnProperty","updateCategories","id","category","updateImages","respJsn","json","imgjsn","proId","categoryName","join","res","catjsn","ProsArray","forEach","Images","mediaContents","object","value","modval","images","streamSlice","getProduct","Products","counter","B2","startIndex","proinvalid","product","ProJsn","nodechecker","Pause","catCount","string","subString","index","type","onChange","this","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3ed4483.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport catinfo from './product'\r\n\r\nexport default class WordpressApi extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { Reactive: true }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        console.log('start')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <h1>hello World</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction callback(error, response, body) {\r\n    if (!error && response.statusCode == 200) {\r\n        console.log(body);\r\n    }\r\n}\r\n\r\nconst brandsCodes = [\r\n    1153, 1154, 1155, 1156,\r\n    1157, 158, 1159, 1160,\r\n    1161, 1162, 1163, 1164,\r\n\r\n    1165, 1166, 1167, 1168,\r\n    169, 1170, 1171, 1172,\r\n    1173, 1174, 1175, 1176,\r\n\r\n    1177, 1178, 1179, 1180,\r\n    1187, 1189, 1190, 1191,\r\n    1192 , 1193\r\n\r\n]\r\n\r\nconst brandNames = [\r\n    'Dell', 'Allied Telesis', 'Aruba', 'Avaya',\r\n    'Brocade', 'Brocadexify', 'Cisco', 'D-Link',\r\n    'DIGITUS', 'EnGenius', 'Extreme Networks', 'F-Secure',\r\n\r\n    'GrandStream', 'HP Enterprise', 'Huawei', 'Intellinet',\r\n    'Juniper', 'Lenovo', 'Linksys', 'MikroTik',\r\n    'Moxa', 'QNAP', 'Siera Wireless', 'StarTech.com',\r\n\r\n    'Synology', 'TP-LINK', 'UbiQuiti', 'ZyXEL',\r\n    'Sophos', 'SonicWALL', 'Stormshield', 'Fortinet',\r\n     'APC' , 'Poly'\r\n]\r\n\r\nvar c = 0","import React, { Component } from \"react\";\r\nimport { ProgressBar, Jumbotron, Button, Form } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nconst fs = require('fs');\r\n// var request = require('request'), JSONStream = require('JSONStream'), es = require('event-stream')\r\n\r\n\r\nvar ProductCount = 0, ProArray = [];\r\n\r\n\r\nfunction getstream (res) {\r\n            var data = res.data.toString(); \r\n            if (data === '[' || data === ']') return console.log(data)\r\n            var jsonStr = data.slice(-1) === '}' ? data : data.slice(0, -1)\r\n            console.log(JSON.parse(jsonStr)) \r\n}\r\n\r\nexport default class HugeUpload extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            ResumeFrom: -1,\r\n            Products: [],\r\n            counter: 0,\r\n            progressInstance: 0,\r\n            Pause: false,\r\n            SequenceCount: false,\r\n            catCount: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        //var url = 'http://localhost:5000/api/stream';\r\n        //axios.get(url, { responseType: 'stream' }).then(getstream);\r\n    }\r\n\r\n    getFileContext = (e) => {\r\n        const _file = e.target.files[0];\r\n        //this.RowStream(_file, 0, 100000)\r\n        this.splitStream(_file, 0, 100000)\r\n\r\n    }\r\n\r\n\r\n    splitStream = async (File, start, end) => {\r\n        if (end <= File.size) {\r\n            var Bytes = File.slice(start, end);\r\n            var ByteText = await Bytes.text();\r\n\r\n            var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n            //console.log(`Resume From :: ${start + i2 - 100}`)\r\n            this.setState({ ResumeFrom: start + i2 - 100 })\r\n            var LinesArray = ByteText.split('\\n')\r\n            this.ReadRow2(File, LinesArray)\r\n        } else {\r\n            console.log(\"Finished Processing File\")\r\n            this.setState({ progressInstance: 'Finished Processing File' })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // ReadRow = (File, rows) => {\r\n\r\n    //     var Product = '', Pause = -1, Stream = false, count = 0;\r\n    //     for (let c = 0; c <= rows.length - 1; c++) {\r\n    //         if (rows[c].includes('puid')) Stream = true\r\n    //         if (Stream) {\r\n    //             if (rows[c].includes('puid')) count += 1\r\n    //             if (count == 1) {\r\n    //                 let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n    //                 Product += Row;\r\n    //                 //  console.log(Row)\r\n    //             }\r\n    //             if (count == 2) {\r\n    //                 Stream = false;\r\n    //                 Product = Product.substring(0, Product.length - 3)\r\n    //                 try {\r\n    //                     console.log(JSON.parse(Product))\r\n    //                 } catch (ex) { console.log(ex) }\r\n    //                 ProductCount += 1;\r\n    //                 console.log(`Products :: ${ProductCount}`)\r\n    //                 //   console.log(this.state.ResumeFrom)\r\n    //                 this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    ReadRow2 = async (File, rows) => {\r\n\r\n        var Product = '', Pause = -1, Stream = false, count = 0;\r\n        for (let c = 0; c <= rows.length - 1; c++) {\r\n            if (rows[c].includes('puid')) Stream = true\r\n            if (Stream) {\r\n                if (rows[c].includes('puid')) count += 1\r\n                if (count == 1) {\r\n                    let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n                    Product += Row;\r\n                    //  console.log(Row)\r\n                }\r\n                if (count == 2) {\r\n                    Stream = false;\r\n                    Product = Product.substring(0, Product.length - 3)\r\n\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            var niceProduct = JSON.parse(Product)\r\n            //console.log(niceProduct)\r\n            this.UpdateProduct(niceProduct, File)\r\n        } catch (ex) {\r\n            console.log(`Catch :: ${ex}`)\r\n            this.Resumify(File)\r\n        }\r\n        //   console.log(this.state.ResumeFrom)\r\n        // if (!this.state.Pause) this.Resumify(File)\r\n\r\n    }\r\n\r\n\r\n    Resumify = (File) => {\r\n        this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n    }\r\n\r\n\r\n\r\n    UpdateProduct = async (Pro, File) => {\r\n        ProArray.push(Pro)\r\n        if (ProArray.length == 5) {\r\n            console.log(\"5 products bundled\")\r\n            this.Fetch(ProArray)\r\n\r\n            setInterval(() => {\r\n                if (this.state.SequenceCount == 5) {\r\n                    console.log(\"5 products uploaded\")\r\n                    ProArray = []\r\n                    this.setState({ SequenceCount: 0 })\r\n                    // clearInterval(procounter)\r\n                    this.Resumify(File)\r\n                }\r\n            }, 1000)\r\n        } else {\r\n            console.log('Resume: Products ')\r\n            this.Resumify(File)\r\n        }\r\n    }\r\n\r\n    Fetch = (Pro) => {\r\n\r\n        //  this.updateCategories('382503' , Pro[0].productType.name)       \r\n        // return \"ok\";\r\n\r\n        console.log(`name :: ${Pro[0].manufacturerSKU}`)\r\n        this.ParseImages(Pro)\r\n\r\n        //  Pro[1].images = []\r\n        // Pro[1].images = [\r\n        //    \"https://www.freedigitalphotos.net/images/img/homepage/339504.jpg\",\r\n        //]\r\n\r\n        //console.log(`Images :: ${Pro[1].images}`)\r\n\r\n\r\n        console.log(`Status :: Sending:Request`)\r\n        var App = this;\r\n\r\n        // fetch(`https://firewallforce.se/wp-json/wc/v3/postify?ean=${Pro.ean}&name=${Title}&puid=${Pro.puid}&sku=${Pro.manufacturerSKU}&price=${Price}&catname=${productType}&brand=${Brand}&shortdesc=${Pro.shortDescription}&longdesc=${Pro.longDescription}&stock=${Pro.aggregatedStock}&stockstatus=${Pro.aggregatedStatusText}&attrib1=${Pro.productType.attributeTypeName1}&attrib2=${Pro.productType.attributeTypeName2}&attrib3=${Pro.productType.attributeTypeName3}&attrib4=${Pro.productType.attributeTypeName4}&attrib5=${Pro.productType.attributeTypeName5}&attrib1v=${Pro.attributeValue1}&attrib2v=${Pro.attributeValue2}&attrib3v=${Pro.attributeValue3}&attrib4v=${Pro.attributeValue4}&attrib5v=${Pro.attributeValue5}&images=${Images}&warrantyText=${Pro.warrantyText}&productName=${Pro.productName}&productNameWithManufacturer=${productWithManufacturer}&productTypeGroup=${Pro.productType.productTypeGroup}&producttypeName=${Pro.productType.name}&productsubtype=${Pro.productSubType}&productsubtypeid=${Pro.productSubTypeId}&estimategrossweight=${Pro.estimateGrossWeight}&productType=${Pro.manufacturerName}&productModel=${Pro.productModel}&htmlspecs=${Pro.htmlSpecs}`, {\r\n        fetch(`https://firewallforce.se/wp-json/wc/v3/postify?`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ info: Pro }),\r\n            headers: {\r\n                'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((Resp) => {\r\n            Resp.text().then((resp) => {\r\n                console.log(`Text :: ${resp}`)\r\n                try {\r\n                    var respJson = JSON.parse(resp)\r\n                    console.log(`resp :: ${(JSON.stringify(respJson))}`)\r\n\r\n                    //return;\r\n                    this.reupdate(respJson)\r\n\r\n                    ProductCount += 5;\r\n                    console.log(`Products :: ${ProductCount}`)\r\n                    App.setState({\r\n                        progressInstance: ProductCount,\r\n                        SequenceCount: this.state.SequenceCount += 5\r\n                    })\r\n\r\n                    return respJson\r\n\r\n                } catch (ex) {\r\n                    console.log(\"@jsn safe\")\r\n                    console.log(ex);\r\n                    console.log(resp);\r\n                    ProductCount += 5;\r\n                    App.setState({\r\n                        progressInstance: ProductCount,\r\n                        SequenceCount: this.state.SequenceCount += 5\r\n                    })\r\n\r\n                }\r\n\r\n            })\r\n        }).catch((e) => {\r\n            console.log(e)\r\n            console.log('@gobal safe!')\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    reupdate = (respJson) => {\r\n\r\n        // rarely product is created\r\n\r\n      try { if (respJson[0].hasOwnProperty('category')) this.updateCategories(respJson[0].id, respJson[0].category) } catch(ex){console.log(ex)}\r\n      try {  if (respJson[1].hasOwnProperty('category')) this.updateCategories(respJson[1].id, respJson[1].category) } catch(ex){console.log(ex)}\r\n      try {  if (respJson[2].hasOwnProperty('category')) this.updateCategories(respJson[2].id, respJson[2].category)} catch(ex){console.log(ex)}\r\n      try {  if (respJson[3].hasOwnProperty('category')) this.updateCategories(respJson[3].id, respJson[3].category)} catch(ex){console.log(ex)}\r\n      try {  if (respJson[4].hasOwnProperty('category')) this.updateCategories(respJson[4].id, respJson[4].category)} catch(ex){console.log(ex)}\r\n\r\n      try {  if (respJson[0].hasOwnProperty('images')) this.updateImages(respJson[0]) } catch(ex){console.log(ex)}\r\n      try {  if (respJson[1].hasOwnProperty('images')) this.updateImages(respJson[1]) } catch(ex){console.log(ex)}\r\n      try {  if (respJson[2].hasOwnProperty('images')) this.updateImages(respJson[2]) } catch(ex){console.log(ex)}\r\n      try {  if (respJson[3].hasOwnProperty('images')) this.updateImages(respJson[3]) } catch(ex){console.log(ex)}\r\n      try { if (respJson[4].hasOwnProperty('images')) this.updateImages(respJson[4]) } catch(ex){console.log(ex)}\r\n\r\n\r\n    }\r\n\r\n    updateImages = async (respJsn) => {\r\n        try {\r\n         fetch(`https://firewallforce.se/wp-json/wc/v3/updateimages?`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ info: respJsn }),\r\n            headers: {\r\n                'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((resp)=>{\r\n            resp.json().then((imgjsn)=>{\r\n                console.log(`Update Image Resp :: ${JSON.stringify(imgjsn)}`)\r\n            })\r\n\r\n        })\r\n    } catch (ex) {\r\n        console.log(ex)\r\n    }\r\n    }\r\n\r\n    updateCategories = async (proId, categoryName) => {\r\n        console.log(`id :: ${proId} & cat :: ${categoryName}`)\r\n        if (categoryName.includes('&')) categoryName = categoryName.split('&').join('*')\r\n        if (categoryName.includes(' ')) categoryName = categoryName.split(' ').join('%20')\r\n        console.log(categoryName);\r\n\r\n        try {\r\n        fetch(`https://firewallforce.se/wp-json/wc/v3/upcat?setcategory=${categoryName}&id=${proId}`)\r\n        .then((res)=>{\r\n           res.json().then((catjsn)=>{\r\n              console.log(`Update Cat Resp :: ${JSON.stringify(catjsn)}`)\r\n           })\r\n        })\r\n    } catch (ex) {\r\n        console.log(ex)\r\n    }\r\n  }\r\n\r\n    ParseImages = (ProsArray) => {\r\n        ProsArray.forEach((Pro) => {\r\n\r\n            var Images = []\r\n            if (Pro.hasOwnProperty('mediaContents')) {\r\n                //console.log('has media contents')\r\n                Pro.mediaContents.forEach((object) => {\r\n                    if (object.value.includes('img')) {\r\n                        //    console.group('has img')\r\n                        let modval = object.value.split('/').join('*')\r\n                        modval = modval.split('&').join('^')\r\n                        // console.log(`image : ${modval}`)\r\n                        Images.push(modval)\r\n                    }\r\n                })\r\n                Pro.images = Images;\r\n                Images = []\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    streamSlice = async (File, start, end) => {\r\n\r\n\r\n\r\n\r\n        var Bytes = File.slice(start, end);\r\n        var ByteText = await Bytes.text();\r\n        var Product = this.getProduct(ByteText, start)\r\n\r\n        this.state.Products.push(Product)\r\n        this.setState({ Products: this.state.Products, counter: this.state.counter + 1 })\r\n\r\n        var B2 = File.slice(this.state.ResumeFrom, 3);\r\n        var text2 = await B2.text()\r\n        // console.log(`codeGuru : ${File.length - 1}`)\r\n\r\n    }\r\n\r\n    getProduct = (ByteText, startIndex) => {\r\n        var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n        this.setState({ ResumeFrom: i2 })\r\n        var proinvalid = ByteText.substring(startIndex - 9, i2)\r\n        console.log(proinvalid)\r\n        var product = proinvalid.substring(0, proinvalid.length - 9)\r\n        var ProJsn = JSON.parse(product)\r\n        console.log(ProJsn)\r\n        return ProJsn\r\n    }\r\n\r\n    getIndex(string, subString, index) {\r\n        return string.split(subString, index).join(subString).length;\r\n    }\r\n\r\n    nodechecker = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={(e) => { this.getFileContext(e) }} />\r\n                <h5> {this.state.progressInstance} </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport WordpressApi from './screens/wordpressApi'\nimport HugeUpload from './screens/HugeUpload'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HugeUpload />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}