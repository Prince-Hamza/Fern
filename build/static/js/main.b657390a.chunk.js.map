{"version":3,"sources":["logo.svg","screens/wordpressApi.jsx","screens/HugeUpload.jsx","App.js","reportWebVitals.js","index.js"],"names":["Component","ProductCount","getstream","res","console","log","data","HugeUpload","componentDidMount","initStream","url","state","exportKey","axios","get","responseType","then","onProduct","App","ws","WebSocket","onopen","send","onmessage","e","AllProducts","push","setState","ApiFlow","length","one","JSON","parse","two","three","four","five","filter","element","ProArray","Fetch2","Pro","a","keyContents","ParseImages","fetch","method","body","stringify","info","headers","btoa","resp","json","respJson","progressInstance","SequenceCount","reupdate","Fetch","manufacturerSKU","Resp","text","ex","catch","hasOwnProperty","updateCategories","id","category","updateImages","respJsn","images","imgjsn","proId","categoryName","includes","split","join","catjsn","ProsArray","forEach","Images","mediaContents","object","value","modval","CreateProduct","ResumeFrom","counter","Pause","catCount","string","subString","index","type","placeholder","this","onChange","target","onClick","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b657390a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport catinfo from './product'\r\n\r\nexport default class WordpressApi extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { Reactive: true }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        console.log('start')\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n              <h1>hello World</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction callback(error, response, body) {\r\n    if (!error && response.statusCode == 200) {\r\n        console.log(body);\r\n    }\r\n}\r\n\r\nconst brandsCodes = [\r\n    1153, 1154, 1155, 1156,\r\n    1157, 158, 1159, 1160,\r\n    1161, 1162, 1163, 1164,\r\n\r\n    1165, 1166, 1167, 1168,\r\n    169, 1170, 1171, 1172,\r\n    1173, 1174, 1175, 1176,\r\n\r\n    1177, 1178, 1179, 1180,\r\n    1187, 1189, 1190, 1191,\r\n    1192 , 1193\r\n\r\n]\r\n\r\nconst brandNames = [\r\n    'Dell', 'Allied Telesis', 'Aruba', 'Avaya',\r\n    'Brocade', 'Brocadexify', 'Cisco', 'D-Link',\r\n    'DIGITUS', 'EnGenius', 'Extreme Networks', 'F-Secure',\r\n\r\n    'GrandStream', 'HP Enterprise', 'Huawei', 'Intellinet',\r\n    'Juniper', 'Lenovo', 'Linksys', 'MikroTik',\r\n    'Moxa', 'QNAP', 'Siera Wireless', 'StarTech.com',\r\n\r\n    'Synology', 'TP-LINK', 'UbiQuiti', 'ZyXEL',\r\n    'Sophos', 'SonicWALL', 'Stormshield', 'Fortinet',\r\n     'APC' , 'Poly'\r\n]\r\n\r\nvar c = 0","import React, { Component } from \"react\";\r\nimport { ProgressBar, Jumbotron, Button, Form } from \"react-bootstrap\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\nimport WooCommerceRestApi from \"@woocommerce/woocommerce-rest-api\";\r\nimport firebase from '@firebase/app'\r\nimport database from '@firebase/database'\r\nimport io from 'socket.io';\r\n\r\n\r\n\r\nvar ProductCount = 0, ProArray = [];\r\n\r\n\r\nfunction getstream(res) {\r\n    console.log(res.data)\r\n}\r\n\r\nexport default class HugeUpload extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            ResumeFrom: -1,\r\n            AllProducts: [],\r\n            counter: 0,\r\n            progressInstance: 0,\r\n            Pause: false,\r\n            SequenceCount: false,\r\n            catCount: 0,\r\n            exportKey: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n    }\r\n\r\n    initStream = () => {\r\n        var url = `https://super-api-apicenter.herokuapp.com/api/stream/${this.state.exportKey}`;\r\n        axios.get(url, { responseType: 'stream' }).then(getstream);\r\n\r\n    }\r\n\r\n    onProduct = () => {\r\n        const App = this;\r\n        const ws = new WebSocket('wss://super-api-apicenter.herokuapp.com/');\r\n        ws.onopen = function () {\r\n            console.log('WebSocket Client Connected');\r\n            ws.send('Message From Client');\r\n            App.initStream()\r\n        };\r\n        ws.onmessage = function (e) {\r\n            //  console.log(`Received:\" + ${e.data}  \"isEmpty:\"  ${e.data == ''}`);\r\n            App.state.AllProducts.push(e.data)\r\n            App.setState({ AllProducts: App.state.AllProducts })\r\n            App.ApiFlow()\r\n        };\r\n\r\n\r\n    }\r\n\r\n    ApiFlow = () => {\r\n        console.log(this.state.AllProducts.length)\r\n\r\n        if (this.state.AllProducts.length > 5) {\r\n            var one = JSON.parse(this.state.AllProducts[0])\r\n            var two = JSON.parse(this.state.AllProducts[1])\r\n            var three = JSON.parse(this.state.AllProducts[2])\r\n            var four = JSON.parse(this.state.AllProducts[3])\r\n            var five = JSON.parse(this.state.AllProducts[4])\r\n            this.state.AllProducts = this.state.AllProducts.filter(element => element !== this.state.AllProducts[0]);\r\n            this.state.AllProducts = this.state.AllProducts.filter(element => element !== this.state.AllProducts[1]);\r\n            this.state.AllProducts = this.state.AllProducts.filter(element => element !== this.state.AllProducts[2]);\r\n            this.state.AllProducts = this.state.AllProducts.filter(element => element !== this.state.AllProducts[3]);\r\n            this.state.AllProducts = this.state.AllProducts.filter(element => element !== this.state.AllProducts[4]);\r\n\r\n            this.setState({ AllProducts: this.state.AllProducts })\r\n            var ProArray = [one, two, three, four, five]\r\n\r\n\r\n            this.Fetch2(ProArray)\r\n\r\n            // console.log(`iPro :: ${one}`);\r\n            // console.log(`iPro :: ${two}`);\r\n            // console.log(`iPro :: ${three}`);\r\n            // console.log(`iPro :: ${four}`);\r\n            // console.log(`iPro :: ${five}`);\r\n\r\n        }\r\n\r\n    }\r\n    // getFileContext = (e) => {\r\n    //     const _file = e.target.files[0];\r\n    //     //this.RowStream(_file, 0, 100000)\r\n    //     this.splitStream(_file, 0, 100000)\r\n\r\n    // }\r\n\r\n\r\n    // splitStream = async (File, start, end) => {\r\n    //     if (end <= File.size) {\r\n    //         var Bytes = File.slice(start, end);\r\n    //         var ByteText = await Bytes.text();\r\n\r\n    //         var i2 = this.getIndex(ByteText, \"puid\", 2)\r\n    //         //console.log(`Resume From :: ${start + i2 - 100}`)\r\n    //         this.setState({ ResumeFrom: start + i2 - 100 })\r\n    //         var LinesArray = ByteText.split('\\n')\r\n    //         this.ReadRow2(File, LinesArray)\r\n    //     } else {\r\n    //         console.log(\"Finished Processing File\")\r\n    //         this.setState({ progressInstance: 'Finished Processing File' })\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n    // ReadRow2 = async (File, rows) => {\r\n\r\n    //     var Product = '', Pause = -1, Stream = false, count = 0;\r\n    //     for (let c = 0; c <= rows.length - 1; c++) {\r\n    //         if (rows[c].includes('puid')) Stream = true\r\n    //         if (Stream) {\r\n    //             if (rows[c].includes('puid')) count += 1\r\n    //             if (count == 1) {\r\n    //                 let Row = rows[c].includes('puid') ? '{' + rows[c] : rows[c]\r\n    //                 Product += Row;\r\n    //                 //  console.log(Row)\r\n    //             }\r\n    //             if (count == 2) {\r\n    //                 Stream = false;\r\n    //                 Product = Product.substring(0, Product.length - 3)\r\n\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     try {\r\n    //         var niceProduct = JSON.parse(Product)\r\n    //         //console.log(niceProduct)\r\n    //         this.UpdateProduct(niceProduct, File)\r\n    //     } catch (ex) {\r\n    //         console.log(`Catch :: ${ex}`)\r\n    //         this.Resumify(File)\r\n    //     }\r\n    //     //   console.log(this.state.ResumeFrom)\r\n    //     // if (!this.state.Pause) this.Resumify(File)\r\n\r\n    // }\r\n\r\n\r\n    // Resumify = (File) => {\r\n    //     this.splitStream(File, this.state.ResumeFrom, this.state.ResumeFrom + 1000000)\r\n    // }\r\n\r\n\r\n\r\n    // UpdateProduct = async (Pro, File) => {\r\n    //     ProArray.push(Pro)\r\n    //     if (ProArray.length == 5) {\r\n    //         console.log(\"5 products bundled\")\r\n    //         this.Fetch2(ProArray)\r\n\r\n    //         setInterval(() => {\r\n    //             if (this.state.SequenceCount == 5) {\r\n    //                 console.log(\"5 products uploaded\")\r\n    //                 ProArray = []\r\n    //                 this.setState({ SequenceCount: 0 })\r\n    //                 // clearInterval(procounter)\r\n    //                 this.Resumify(File)\r\n    //             }\r\n    //         }, 1000)\r\n    //     } else {\r\n    //         console.log('Resume: Products ')\r\n    //         this.Resumify(File)\r\n    //     }\r\n    // }\r\n\r\n    Fetch2 = async (Pro) => {\r\n\r\n        delete Pro[0].keyContents;\r\n        delete Pro[1].keyContents;\r\n        delete Pro[2].keyContents;\r\n        delete Pro[3].keyContents;\r\n        delete Pro[4].keyContents;\r\n        this.ParseImages(Pro)\r\n\r\n        // Pro.forEach((product) => {\r\n        //     try {\r\n        //         var p = JSON.parse(product)\r\n        //         console.log(`parsed price :: ${p.productPriceInfo}`)\r\n        //     } catch (ex) {\r\n        //         console.log(`error pro :: ${product}`)\r\n        //     }\r\n\r\n\r\n        // })\r\n\r\n\r\n        var App = this;\r\n        \r\n        var resp = await fetch(`https://super-api-apicenter.herokuapp.com/api/woo`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ info: Pro }),\r\n            headers: {\r\n                'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n\r\n        //  var respText = await resp.text()\r\n        var respJson = await resp.json()\r\n        console.log(JSON.stringify(respJson))\r\n        \r\n                    ProductCount += 5;\r\n                    console.log(`Products :: ${ProductCount}`)\r\n                    App.setState({\r\n                        progressInstance: ProductCount,\r\n                        SequenceCount: this.state.SequenceCount += 5\r\n                    })\r\n\r\n        this.reupdate(respJson.info)\r\n\r\n    }\r\n\r\n    Fetch = (Pro) => {\r\n\r\n        //  this.updateCategories('382503' , Pro[0].productType.name)       \r\n        // return \"ok\";\r\n\r\n        console.log(`name :: ${Pro[0].manufacturerSKU}`)\r\n        this.ParseImages(Pro)\r\n\r\n        console.log(`Status :: Sending:Request`)\r\n        var App = this;\r\n\r\n        // fetch(`https://firewallforce.se/wp-json/wc/v3/postify?ean=${Pro.ean}&name=${Title}&puid=${Pro.puid}&sku=${Pro.manufacturerSKU}&price=${Price}&catname=${productType}&brand=${Brand}&shortdesc=${Pro.shortDescription}&longdesc=${Pro.longDescription}&stock=${Pro.aggregatedStock}&stockstatus=${Pro.aggregatedStatusText}&attrib1=${Pro.productType.attributeTypeName1}&attrib2=${Pro.productType.attributeTypeName2}&attrib3=${Pro.productType.attributeTypeName3}&attrib4=${Pro.productType.attributeTypeName4}&attrib5=${Pro.productType.attributeTypeName5}&attrib1v=${Pro.attributeValue1}&attrib2v=${Pro.attributeValue2}&attrib3v=${Pro.attributeValue3}&attrib4v=${Pro.attributeValue4}&attrib5v=${Pro.attributeValue5}&images=${Images}&warrantyText=${Pro.warrantyText}&productName=${Pro.productName}&productNameWithManufacturer=${productWithManufacturer}&productTypeGroup=${Pro.productType.productTypeGroup}&producttypeName=${Pro.productType.name}&productsubtype=${Pro.productSubType}&productsubtypeid=${Pro.productSubTypeId}&estimategrossweight=${Pro.estimateGrossWeight}&productType=${Pro.manufacturerName}&productModel=${Pro.productModel}&htmlspecs=${Pro.htmlSpecs}`, {\r\n        fetch(`https://firewallforce.se/wp-json/wc/v3/postify?`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ info: Pro }),\r\n            headers: {\r\n                'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526'),\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }).then((Resp) => {\r\n            Resp.text().then((resp) => {\r\n                console.log(`Text :: ${resp}`)\r\n                try {\r\n                    var respJson = JSON.parse(resp)\r\n                    console.log(`resp :: ${(JSON.stringify(respJson))}`)\r\n\r\n                    //return;\r\n                    this.reupdate(respJson)\r\n\r\n                    ProductCount += 5;\r\n                    console.log(`Products :: ${ProductCount}`)\r\n                    App.setState({\r\n                        progressInstance: ProductCount,\r\n                        SequenceCount: this.state.SequenceCount += 5\r\n                    })\r\n\r\n                    return respJson\r\n\r\n                } catch (ex) {\r\n                    console.log(\"@jsn safe\")\r\n                    console.log(ex);\r\n                    console.log(resp);\r\n                    ProductCount += 5;\r\n                    App.setState({\r\n                        progressInstance: ProductCount,\r\n                        SequenceCount: this.state.SequenceCount += 5\r\n                    })\r\n\r\n                }\r\n\r\n            })\r\n        }).catch((e) => {\r\n            console.log(e)\r\n            console.log('@gobal safe!')\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    reupdate = (respJson) => {\r\n\r\n        // rarely product is created\r\n\r\n        try { if (respJson[0].hasOwnProperty('category')) this.updateCategories(respJson[0].id, respJson[0].category) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[1].hasOwnProperty('category')) this.updateCategories(respJson[1].id, respJson[1].category) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[2].hasOwnProperty('category')) this.updateCategories(respJson[2].id, respJson[2].category) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[3].hasOwnProperty('category')) this.updateCategories(respJson[3].id, respJson[3].category) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[4].hasOwnProperty('category')) this.updateCategories(respJson[4].id, respJson[4].category) } catch (ex) { console.log(ex) }\r\n\r\n        try { if (respJson[0].hasOwnProperty('images')) this.updateImages(respJson) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[1].hasOwnProperty('images')) this.updateImages(respJson[1]) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[2].hasOwnProperty('images')) this.updateImages(respJson[2]) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[3].hasOwnProperty('images')) this.updateImages(respJson[3]) } catch (ex) { console.log(ex) }\r\n        // try { if (respJson[4].hasOwnProperty('images')) this.updateImages(respJson[4]) } catch (ex) { console.log(ex) }\r\n\r\n    }\r\n\r\n    updateImages = async (respJsn) => {\r\n        console.log(respJsn[0].images)\r\n        try {\r\n            fetch(`https://firewallforce.se/wp-json/wc/v3/updateimages?`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ info: respJsn }),\r\n                headers: {\r\n                    'Authorization': 'Basic' + btoa('ck_42a75ce7a233bc1e341e33779723c304e6d820cc:cs_6e5a683ab5f08b62aa1894d8d2ddc4ad69ff0526'),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n            }).then((resp) => {\r\n                resp.text().then((imgjsn) => {\r\n                    console.log(`Update Image Resp :: ${JSON.stringify(imgjsn)}`)\r\n                })\r\n\r\n            })\r\n        } catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    updateCategories = async (proId, categoryName) => {\r\n        console.log(`id :: ${proId} & cat :: ${categoryName}`)\r\n        if (categoryName.includes('&')) categoryName = categoryName.split('&').join('*')\r\n        if (categoryName.includes(' ')) categoryName = categoryName.split(' ').join('%20')\r\n        console.log(categoryName);\r\n\r\n        try {\r\n            fetch(`https://firewallforce.se/wp-json/wc/v3/upcat?setcategory=${categoryName}&id=${proId}`)\r\n                .then((res) => {\r\n                    res.json().then((catjsn) => {\r\n                        console.log(`Update Cat Resp :: ${JSON.stringify(catjsn)}`)\r\n                    })\r\n                })\r\n        } catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    ParseImages = (ProsArray) => {\r\n        ProsArray.forEach((Pro) => {\r\n\r\n            var Images = []\r\n            if (Pro.hasOwnProperty('mediaContents')) {\r\n                //console.log('has media contents')\r\n                Pro.mediaContents.forEach((object) => {\r\n                    if (object.value.includes('img')) {\r\n                        //    console.group('has img')\r\n                        let modval = object.value.split('/').join('*')\r\n                        modval = modval.split('&').join('^')\r\n                        // console.log(`image : ${modval}`)\r\n                        Images.push(modval)\r\n                    }\r\n                })\r\n                Pro.images = Images;\r\n                Images = []\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    CreateProduct = () => {\r\n\r\n    }\r\n\r\n\r\n    getIndex(string, subString, index) {\r\n        return string.split(subString, index).join(subString).length;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <input type=\"file\" onChange={(e) => { this.getFileContext(e) }} />\r\n                <h5> {this.state.progressInstance} </h5> */}\r\n\r\n                <input type=\"text\" placeholder=\"Export Key\" value={this.state.exportKey} onChange={(e) => { this.setState({ exportKey: e.target.value }) }} />\r\n                <button onClick={() => { this.onProduct() }} >Start</button>\r\n                <h5>{this.state.progressInstance}</h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport WordpressApi from './screens/wordpressApi'\nimport HugeUpload from './screens/HugeUpload'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HugeUpload />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}